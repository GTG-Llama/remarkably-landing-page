server {
    listen 80;
    listen [::]:80;
    server_name remarkably.ink www.remarkably.ink;
    root /var/www/remarkably;
    index index.html;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Handle static assets with cache headers
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Handle manifest and robots files
    location = /robots.txt {
        try_files $uri =404;
    }

    location = /site.webmanifest {
        try_files $uri =404;
    }

    location = /sitemap.xml {
        try_files $uri =404;
    }

    location = /favicon.ico {
        try_files $uri =404;
    }

    # Handle all other routes - SPA fallback
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache headers for HTML files
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Optional: Handle API routes if any (adjust as needed)
    location /api/ {
        # Proxy to your API server if you have one
        # proxy_pass http://localhost:3001;
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        return 404;
    }
}

# HTTPS redirect (if SSL is configured)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name remarkably.ink www.remarkably.ink;
    
    # SSL configuration (update paths as needed)
    # ssl_certificate /path/to/certificate.crt;
    # ssl_certificate_key /path/to/private.key;
    
    root /var/www/remarkably;
    index index.html;

    # Same configuration as HTTP block above
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;

    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    location = /robots.txt { try_files $uri =404; }
    location = /site.webmanifest { try_files $uri =404; }
    location = /sitemap.xml { try_files $uri =404; }
    location = /favicon.ico { try_files $uri =404; }

    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    location /api/ {
        return 404;
    }
}